---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';

// Kiểm tra phiên đăng nhập
const { data: { session } } = await supabase.auth.getSession();
if (!session) {
  return Astro.redirect('/admin');
}

// Kiểm tra quyền admin
const { data: userData, error: userError } = await supabase
  .from('users')
  .select('role, full_name')
  .eq('id', session.user.id)
  .single();

if (userError || userData?.role !== 'admin') {
  console.error('Lỗi khi kiểm tra quyền admin hoặc không có quyền admin:', userError);
  return Astro.redirect('/admin');
}

// Lấy thông tin người dùng
const user = session.user;
const userName = userData?.full_name || user.email;

// Lấy tham số tìm kiếm từ URL
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get('search') || '';

// Lấy số liệu thống kê
let stats = {
  totalPosts: 0,
  totalComments: 0,
  totalCategories: 0,
  recentPosts: []
};

try {
  // Tổng số bài viết
  const { count: postsCount } = await supabase
    .from('posts')
    .select('*', { count: 'exact', head: true });
  
  stats.totalPosts = postsCount || 0;
  
  // Tổng số bình luận
  const { count: commentsCount } = await supabase
    .from('comments')
    .select('*', { count: 'exact', head: true });
  
  stats.totalComments = commentsCount || 0;
  
  // Tổng số danh mục
  const { count: categoriesCount } = await supabase
    .from('categories')
    .select('*', { count: 'exact', head: true });
  
  stats.totalCategories = categoriesCount || 0;
  
  // Các bài viết gần đây với tìm kiếm nếu có
  let query = supabase
    .from('posts')
    .select('id, title, slug, created_at, status, post_type')
    .order('created_at', { ascending: false })
    .limit(5);
  
  // Thêm điều kiện tìm kiếm nếu có
  if (searchQuery) {
    query = query.ilike('title', `%${searchQuery}%`);
  }
  
  const { data: recentPosts } = await query;
  stats.recentPosts = recentPosts || [];
  
} catch (error) {
  console.error('Lỗi khi lấy thống kê:', error);
}

// Xử lý đăng xuất
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  if (formData.get('action') === 'logout') {
    await supabase.auth.signOut();
    return Astro.redirect('/admin');
  }
}
---

<Layout title="Dashboard Admin | Blog cá nhân">
  <section class="py-12">
    <div class="container mx-auto px-4">
      <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-heading font-bold text-gray-800">Dashboard Admin</h1>
        
        <form method="POST">
          <input type="hidden" name="action" value="logout" />
          <button 
            type="submit"
            class="bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded-lg transition-colors flex items-center gap-2"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
            </svg>
            Đăng xuất
          </button>
        </form>
      </div>
      
      <div class="bg-white p-6 rounded-xl shadow-md mb-8 border border-gray-100">
        <div class="flex items-center gap-4">
          <div class="bg-primary/10 p-4 rounded-full">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div>
            <h2 class="text-xl font-bold mb-1">Xin chào, {userName}</h2>
            <p class="text-gray-600">Bạn đã đăng nhập với tư cách quản trị viên. Bạn có thể quản lý nội dung blog từ đây.</p>
          </div>
        </div>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
        <a href="/admin/posts" class="bg-white p-6 rounded-xl shadow-md border border-gray-100 transition-all duration-300 hover:shadow-lg hover:border-primary/20 group">
          <div class="flex items-center">
            <div class="bg-primary/10 p-4 rounded-full mr-4 group-hover:bg-primary/20 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
              </svg>
            </div>
            <div>
              <h3 class="text-gray-500 text-sm">Tổng số bài viết</h3>
              <p class="text-3xl font-bold">{stats.totalPosts}</p>
            </div>
          </div>
        </a>
        
        <a href="/admin/comments" class="bg-white p-6 rounded-xl shadow-md border border-gray-100 transition-all duration-300 hover:shadow-lg hover:border-secondary/20 group">
          <div class="flex items-center">
            <div class="bg-secondary/10 p-4 rounded-full mr-4 group-hover:bg-secondary/20 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-secondary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
              </svg>
            </div>
            <div>
              <h3 class="text-gray-500 text-sm">Tổng số bình luận</h3>
              <p class="text-3xl font-bold">{stats.totalComments}</p>
            </div>
          </div>
        </a>
        
        <a href="/admin/categories" class="bg-white p-6 rounded-xl shadow-md border border-gray-100 transition-all duration-300 hover:shadow-lg hover:border-accent/20 group">
          <div class="flex items-center">
            <div class="bg-accent/10 p-4 rounded-full mr-4 group-hover:bg-accent/20 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-accent" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
              </svg>
            </div>
            <div>
              <h3 class="text-gray-500 text-sm">Tổng số danh mục</h3>
              <p class="text-3xl font-bold">{stats.totalCategories}</p>
            </div>
          </div>
        </a>
      </div>
      
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <div class="lg:col-span-3">
          <div class="bg-white p-6 rounded-xl shadow-md border border-gray-100">
            <div class="flex justify-between items-center mb-6">
              <h2 class="text-xl font-bold text-gray-800">Bài viết gần đây</h2>
              
              <form action="" method="get" class="flex">
                <input 
                  type="text" 
                  name="search" 
                  value={searchQuery}
                  placeholder="Tìm kiếm bài viết..." 
                  class="px-4 py-2 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                />
                <button 
                  type="submit"
                  class="bg-primary text-white px-4 py-2 rounded-r-lg hover:bg-primary/90 transition-colors"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </button>
              </form>
            </div>
            
            {stats.recentPosts.length > 0 ? (
              <div class="overflow-x-auto">
                <table class="w-full">
                  <thead>
                    <tr class="border-b">
                      <th class="text-left py-3 px-2">Tiêu đề</th>
                      <th class="text-left py-3 px-2">Loại</th>
                      <th class="text-left py-3 px-2">Trạng thái</th>
                      <th class="text-left py-3 px-2">Ngày tạo</th>
                      <th class="text-left py-3 px-2">Thao tác</th>
                    </tr>
                  </thead>
                  <tbody>
                    {stats.recentPosts.map((post) => (
                      <tr class="border-b hover:bg-gray-50">
                        <td class="py-3 px-2">
                          <a href={`/blog/${post.slug}`} class="text-primary hover:underline">
                            {post.title}
                          </a>
                        </td>
                        <td class="py-3 px-2">
                          <span class={`px-2 py-1 text-xs rounded-full ${post.post_type === 'tutorial' ? 'bg-blue-100 text-blue-800' : 'bg-purple-100 text-purple-800'}`}>
                            {post.post_type === 'tutorial' ? 'Hướng dẫn' : 'Bài viết'}
                          </span>
                        </td>
                        <td class="py-3 px-2">
                          <span class={`px-2 py-1 text-xs rounded-full ${post.status === 'published' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`}>
                            {post.status === 'published' ? 'Đã đăng' : 'Bản nháp'}
                          </span>
                        </td>
                        <td class="py-3 px-2 text-gray-600">
                          {new Date(post.created_at).toLocaleDateString('vi-VN')}
                        </td>
                        <td class="py-3 px-2">
                          <div class="flex space-x-2">
                            <a 
                              href={`/admin/posts/edit/${post.id}`}
                              class="text-blue-600 hover:text-blue-800"
                            >
                              Sửa
                            </a>
                            <button 
                              class="text-red-600 hover:text-red-800"
                              data-post-id={post.id}
                            >
                              Xóa
                            </button>
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            ) : (
              <p class="text-gray-500 text-center py-4">
                {searchQuery ? `Không tìm thấy bài viết nào với từ khóa "${searchQuery}"` : 'Chưa có bài viết nào'}
              </p>
            )}
            
            {/* Đã loại bỏ nút "Quản lý tất cả bài viết" theo yêu cầu */}
          </div>
        </div>
        
        <div class="lg:col-span-1">
          <div class="bg-white p-6 rounded-xl shadow-md border border-gray-100 mb-8">
            <h2 class="text-xl font-bold mb-6 text-gray-800">Thao tác nhanh</h2>
            
            <div class="space-y-4">
              <a 
                href="/admin/posts/new"
                class="block w-full bg-gradient-to-r from-primary to-primary/90 text-white text-center py-3 rounded-lg hover:shadow-md hover:from-primary/95 hover:to-primary transition-all duration-300 flex items-center justify-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
                Tạo bài viết mới
              </a>
              
              <a 
                href="/admin/posts"
                class="block w-full bg-gradient-to-r from-indigo-600 to-indigo-500 text-white text-center py-3 rounded-lg hover:shadow-md hover:from-indigo-500 hover:to-indigo-600 transition-all duration-300 flex items-center justify-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
                Quản lý bài viết
              </a>
              
              <a 
                href="/admin/categories"
                class="block w-full bg-gradient-to-r from-secondary to-secondary/90 text-white text-center py-3 rounded-lg hover:shadow-md hover:from-secondary/95 hover:to-secondary transition-all duration-300 flex items-center justify-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                </svg>
                Quản lý danh mục
              </a>
              
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Xử lý xóa bài viết
  document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('button[data-post-id]');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const postId = button.getAttribute('data-post-id');
        
        if (confirm('Bạn có chắc chắn muốn xóa bài viết này?')) {
          try {
            const response = await fetch(`/api/posts/${postId}`, {
              method: 'DELETE',
            });
            
            if (response.ok) {
              // Tải lại trang sau khi xóa
              window.location.reload();
            } else {
              alert('Đã xảy ra lỗi khi xóa bài viết');
            }
          } catch (error) {
            console.error('Lỗi khi xóa bài viết:', error);
            alert('Đã xảy ra lỗi khi xóa bài viết');
          }
        }
      });
    });
  });
</script>
