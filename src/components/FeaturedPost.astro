---
interface Props {
  title: string;
  description: string;
  date: string;
  image: string;
  url: string;
  category: string;
  tags: string[];
}

const { title, description, date, image, url, category, tags } = Astro.props;
---

<article class="card-glassmorphism overflow-hidden transition-all hover:shadow-xl lg:flex">
  <div class="relative lg:w-1/2">
    <img src={image} alt={title} class="w-full h-full object-cover min-h-[250px]" />
    <span class="absolute top-3 right-3 bg-gradient-to-r from-primary to-secondary text-white text-xs font-bold px-3 py-1 rounded-full">
      {category}
    </span>
  </div>
  <div class="p-6 lg:w-1/2 flex flex-col justify-between">
    <div>
      <div class="flex items-center gap-2 mb-2">
        <time class="text-sm text-gray-600">{date}</time>
        <span class="text-xs text-gray-500">•</span>
        <span class="text-sm text-primary font-medium">{category}</span>
      </div>
      <h3 class="text-2xl font-heading font-bold mb-3 hover:text-primary transition-colors">
        <a href={url}>{title}</a>
      </h3>
      <p class="text-gray-700 mb-4 line-clamp-3">{description}</p>
      
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.map(tag => (
          <a href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="text-xs bg-gray-100 hover:bg-gray-200 text-gray-800 px-2 py-1 rounded-full transition-colors">
            #{tag}
          </a>
        ))}
      </div>
    </div>
    
    <a href={url} class="inline-flex items-center text-primary font-medium hover:underline">
      Đọc tiếp
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
      </svg>
    </a>
  </div>
</article>
