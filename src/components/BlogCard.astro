---
interface Props {
  title: string;
  description: string;
  date: string;
  author: string;
  image: string;
  url: string;
  categories?: Array<{name: string, slug: string}>;
}

const { title, description, date, author, image, url, categories = [] } = Astro.props;
---

<article class="bg-white rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-all duration-300">
  <a href={url} class="block">
    <img src={image} alt={title} class="w-full h-48 object-cover hover:scale-105 transition-transform duration-300" />
  </a>
  <div class="p-6">
    {categories && categories.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-3">
        {categories.map((category) => (
          <a 
            href={`/blog?category=${category.slug}`}
            class="text-xs font-medium px-2 py-1 rounded-full bg-primary/10 text-primary hover:bg-primary/20 transition-colors"
          >
            {category.name}
          </a>
        ))}
      </div>
    )}
    
    <h3 class="text-xl font-heading font-bold mb-2 line-clamp-2 hover:text-primary transition-colors">
      <a href={url}>{title}</a>
    </h3>
    <p class="text-gray-700 mb-4 line-clamp-3">{description}</p>
    
    <div class="flex justify-between items-center">
      <div class="text-sm text-gray-500">
        <span>{date}</span>
      </div>
      <a href={url} class="inline-flex items-center text-primary font-medium hover:underline">
        Đọc tiếp
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
        </svg>
      </a>
    </div>
  </div>
</article>
